{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Components/api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header/Header.js","Components/Header/index.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Series.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Text","props","color","Message","text","Rating","Year","Image","bgUrl","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","apiKeyAndLanguage","params","api_key","language","api","axios","create","baseURL","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","Slink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","SeriesContainer","Series","Backdrop","probs","bgImg","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","TrailerContainer","Trailer","TrailerTitle","result","collection","seasons","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","videos","href","rel","parts","episodes","still_path","air_date","DetailContainer","Seasons","includes","match","push","history","parsedId","Number","isNaN","belongs_to_collection","prevProps","info","DetailPresenter","path","exact","component","Home","TV","Search","from","Detail","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abfd2daa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nexport default () => (\n  <>\n    <Helmet>\n      <title>Loading | nomflix</title>\n    </Helmet>\n    <Container>\n      <span>Loading...</span>\n    </Container>\n  </>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 3px;\n  opacity: 0;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 5px;\n  background-position: center center;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.4;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/original${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>Movies | nomflix</title>\n      </Helmet>\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    </>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: propTypes.array,\n  upcoming: propTypes.array,\n  popular: propTypes.array,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst apiKeyAndLanguage = {\n  params: {\n    api_key: \"b2e0ccc5b21b3b53128350309f57d23e\",\n    language: \"ko-KR\"\n  }\n};\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: apiKeyAndLanguage.params\n});\n\nexport const movieApi = {\n  nowPlaying: () =>\n    api.get(\"movie/now_playing\", {\n      params: apiKeyAndLanguage.params\n    }),\n  upcoming: () =>\n    api.get(\"movie/upcoming\", {\n      params: apiKeyAndLanguage.params\n    }),\n  popular: () =>\n    api.get(\"movie/popular\", {\n      params: apiKeyAndLanguage.params\n    }),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        api_key: \"b2e0ccc5b21b3b53128350309f57d23e\",\n        language: \"ko-KR\",\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        api_key: \"b2e0ccc5b21b3b53128350309f57d23e\",\n        language: \"ko-KR\",\n        query: encodeURIComponent(term)\n      }\n    }),\n  movieCollection: id =>\n    api.get(`collection/${id}`, {\n      params: apiKeyAndLanguage.params\n    })\n};\n\nexport const tvApi = {\n  topRated: () =>\n    api.get(\"tv/top_rated\", {\n      params: apiKeyAndLanguage.params\n    }),\n  popular: () =>\n    api.get(\"tv/popular\", {\n      params: apiKeyAndLanguage.params\n    }),\n  airingToday: () =>\n    api.get(\"tv/airing_today\", { params: apiKeyAndLanguage.params }),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        api_key: \"b2e0ccc5b21b3b53128350309f57d23e\",\n        language: \"ko-KR\",\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        api_key: \"b2e0ccc5b21b3b53128350309f57d23e\",\n        language: \"ko-KR\",\n        query: encodeURIComponent(term)\n      }\n    }),\n  showSeasons: id =>\n    api.get(`tv/${id}/season/{season_number}`, {\n      params: apiKeyAndLanguage.params\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"Components/api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Couldn't find Movies information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>TV shows | nomflix</title>\n      </Helmet>\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    </>\n  );\n\nTVPresenter.propTypes = {\n  topRated: propTypes.array,\n  popular: propTypes.array,\n  airingToday: propTypes.array,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"Components/api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({\n        error: \"Couldn't find Movies information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => (props.current ? \"red\" : \"transparent\")};\n  transition: border-bottom 0.3s;\n`;\n\nconst Slink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <Slink to=\"/\">Home</Slink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <Slink to=\"/tv\">tv</Slink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <Slink to=\"/search\">search</Slink>\n      </Item>\n    </List>\n  </Header>\n));\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResult,\n  tvResult,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows..\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResult.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResult && tvResult.length > 0 && (\n          <Section title=\"Show Results\">\n            {tvResult.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResult &&\n          tvResult &&\n          movieResult.length === 0 &&\n          tvResult.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing Found\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: propTypes.array,\n  SearchResult: propTypes.array,\n  searchTerm: propTypes.string,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired,\n  handleSubmit: propTypes.func.isRequired,\n  updateTerm: propTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"Components/api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResult: null,\n    tvResult: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  async searchByTerm(term) {\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResult }\n      } = await movieApi.search(term);\n      const {\n        data: { results: tvResult }\n      } = await tvApi.search(term);\n      this.setState({\n        movieResult,\n        tvResult\n      });\n    } catch {\n      this.setState({\n        error: \"Couldn't find results\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { movieResult, tvResult, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-left: 50px;\n  width: 500px;\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  overflow: scroll;\n  scroll-behavior: smooth;\n  overscroll-behavior: contain;\n  position: relative;\n`;\n\nconst SeriesContainer = styled.div`\n  width: 70%;\n  background-size: cover;\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.span`\n  font-size: 30px;\n  margin-bottom: 50px;\n`;\n\nconst Series = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <SeriesContainer>{children}</SeriesContainer>\n  </Container>\n);\n\nSeries.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Series;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Series from \"Components/Series\";\nimport Poster from \"Components/Poster\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-image: url(${probs => probs.bgImg});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  width: 100%;\n  filter: blur(3px);\n  opacity: 0.4;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImg});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 500px;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 20px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nconst TrailerContainer = styled.div`\n  margin-top: 30px;\n  width: 100%;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  overflow: scroll;\n  scroll-behavior: smooth;\n  overscroll-behavior: contain;\n  position: relative;\n`;\n\nconst Trailer = styled.div`\n  :not(:first-child) {\n    margin-top: 30px;\n  }\n  width: 80%;\n  height: 80px;\n  font-size: 20px;\n  padding: 15px 30px;\n  background-color: #2c3e50;\n  color: white;\n  border-radius: 10px;\n  opacity: 0.5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:hover {\n    transform: scale(0.98);\n    opacity: 0.8;\n  }\n`;\n\nconst TrailerTitle = styled.span`\n  width: 100px;\n  font-size: 20px;\n`;\n\nconst HomePresenter = ({ result, collection, seasons, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title> {result.title ? result.title : result.name} | nomflix</title>\n      </Helmet>\n      <Backdrop\n        bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImg={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} 분\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres.map((genre, index) =>\n                index === result.genres.length - 1\n                  ? genre.name\n                  : `${genre.name} / `\n              )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {result.videos.results.length > 0 ? (\n            <>\n              <TrailerTitle>관련 영상</TrailerTitle>\n              <TrailerContainer>\n                {result.videos.results.map(result => (\n                  <Trailer>\n                    <a\n                      href={`https://www.youtube.com/watch?v=${result.key}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <span>{result.name}</span>\n                    </a>\n                  </Trailer>\n                ))}\n              </TrailerContainer>\n            </>\n          ) : null}\n        </Data>\n        {collection && collection.parts.length > 0 && (\n          <Series title={collection.name}>\n            {collection.parts.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.backdrop_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Series>\n        )}\n        {seasons && seasons.episodes.length > 0 && (\n          <Series title=\"에피소드\">\n            {seasons.episodes.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.still_path}\n                title={movie.name}\n                year={movie.air_date && movie.air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Series>\n        )}\n      </Content>\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  result: propTypes.object,\n  collection: propTypes.object,\n  seasons: propTypes.object,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"Components/api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      collection: null,\n      Seasons: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n\n    const parsedId = Number(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    let collection = null;\n    let seasons = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n        ({ data: collection } = await movieApi.movieCollection(\n          result.belongs_to_collection.id\n        ));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n        ({ data: seasons } = await tvApi.showSeasons(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"couldn't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n        collection,\n        seasons\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      const {\n        match: {\n          params: { id }\n        },\n        history: { push }\n      } = this.props;\n\n      const { isMovie } = this.state;\n\n      const parsedId = Number(id);\n\n      if (isNaN(parsedId)) {\n        return push(\"/\");\n      }\n\n      let result = null;\n      let collection = null;\n      let seasons = null;\n      try {\n        if (isMovie) {\n          ({ data: result } = await movieApi.movieDetail(parsedId));\n          ({ data: collection } = await movieApi.movieCollection(\n            result.belongs_to_collection.id\n          ));\n        } else {\n          ({ data: result } = await tvApi.showDetail(parsedId));\n          ({ data: seasons } = await tvApi.showSeasons(parsedId));\n        }\n      } catch {\n        this.setState({\n          error: \"couldn't find anything.\"\n        });\n      } finally {\n        this.setState({\n          loading: false,\n          result,\n          collection,\n          seasons\n        });\n      }\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error: \"couldn't find anything.\"\n    });\n  }\n\n  // async componentDidUpdate() {\n  // }\n\n  render() {\n    const { result, collection, seasons, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        collection={collection}\n        seasons={seasons}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"nomflix/\" exact component={Home} />\n        <Route path=\"nomflix/tv\" component={TV} />\n        <Route path=\"nomflix/search\" component={Search} />\n        <Redirect from=\"#\" to=\"nomflix/\" />\n        <Route path=\"nomflix/movie/:id\" component={Detail} />\n        <Route path=\"nomflix/show/:id\" component={Detail} />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n\n    }\n    *{\n        box-sizing:border-box;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}